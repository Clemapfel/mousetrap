hljs.registerLanguage("julia", function(e) {
    var r = {
            keyword: "struct in abstract baremodule begin bitstype break catch" +
                " ccall const continue do else elseif end export finally for function global if immutable import importall let local macro module quote return try type typealias using while",
            literal: "true false ARGS CPU_CORES C_NULL DL_LOAD_PATH DevNull ENDIAN_BOM ENV I|0 Inf Inf16 Inf32 InsertionSort JULIA_HOME LOAD_PATH MS_ASYNC MS_INVALIDATE MS_SYNC MergeSort NaN NaN16 NaN32 OS_NAME QuickSort RTLD_DEEPBIND RTLD_FIRST RTLD_GLOBAL RTLD_LAZY RTLD_LOCAL RTLD_NODELETE RTLD_NOLOAD RTLD_NOW RoundDown RoundFromZero RoundNearest RoundToZero RoundUp STDERR STDIN STDOUT VERSION WORD_SIZE catalan cglobal e|0 eu|0 eulergamma golden im nothing pi γ π φ Inf64 NaN64 RoundNearestTiesAway RoundNearestTiesUp ",
            built_in: "AbstractChar AbstractDisplay AbstractFloat AbstractIrrational AbstractMatch AbstractPattern AbstractString Any ArgumentError AssertionError BigFloat BigInt BitMatrix BitSet BitVector Bool BoundsError CanonicalIndexError CapturedException Cchar Cdouble Cfloat Char Cint Cintmax_t Clong Clonglong Cmd Colon ComplexF16 ComplexF32 ComplexF64 CompositeException ConcurrencyViolationError Condition Cptrdiff_t Cshort Csize_t Cssize_t Cstring Cuchar Cuint Cuintmax_t Culong Culonglong Cushort Cvoid Cwchar_t Cwstring DataType DimensionMismatch DivideError DomainError EOFError ErrorException Exception ExponentialBackOff Expr Float16 Float32 Float64 Function GlobalRef IO IOBuffer IOStream IndexCartesian IndexLinear IndexStyle InexactError InitError Int Int128 Int16 Int32 Int64 Int8 Integer InterruptException InvalidStateException KeyError LazyString LineNumberNode LoadError Method MethodError Missing MissingException Module Nothing Number OutOfMemoryError OverflowError Pipe ProcessFailedException QuoteNode RawFD ReadOnlyMemoryError Real ReentrantLock Regex RegexMatch SegmentationFault Signed StackOverflowError String StringIndexError Symbol SystemError Task TaskFailedException TextDisplay Timer Tuple TypeError TypeVar UInt UInt128 UInt16 UInt32 UInt64 UInt8 UndefInitializer UndefKeywordError UndefRefError UndefVarError Union UnionAll Unsigned VersionNumber WeakRef"
        },
        t = "[A-Za-z_\\u00A1-\\uFFFF][A-Za-z_0-9\\u00A1-\\uFFFF]*",
        a = {
            l: t,
            k: r,
            i: /<\//
        },
        n = {
            cN: "type",
            b: /::/
        },
        o = {
            cN: "type",
            b: /<:/
        },
        i = {
            cN: "number",
            b: /(\b0x[\d_]*(\.[\d_]*)?|0x\.\d[\d_]*)p[-+]?\d+|\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\b\d[\d_]*(\.[\d_]*)?|\.\d[\d_]*)([eEfF][-+]?\d+)?/,
            r: 0
        },
        l = {
            cN: "string",
            b: /'(.|\\[xXuU][a-zA-Z0-9]+)'/
        },
        c = {
            cN: "subst",
            b: /\$\(/,
            e: /\)/,
            k: r
        },
        s = {
            cN: "variable",
            b: "\\$" + t
        },
        d = {
            cN: "string",
            c: [e.BE, c, s],
            v: [{
                b: /\w*"""/,
                e: /"""\w*/,
                r: 10
            }, {
                b: /\w*"/,
                e: /"\w*/
            }]
        },
        S = {
            cN: "string",
            c: [e.BE, c, s],
            b: "`",
            e: "`"
        },
        u = {
            cN: "meta",
            b: "@" + t
        },
        sy = {
            cN: "meta",
            b: ":" + t
        },
        g = {
            cN: "comment",
            v: [{
                b: "#=",
                e: "=#",
                r: 10
            }, {
                b: "#",
                e: "$"
            }]
        }
    return a.c = [i, l, n, o, d, S, u, sy, g, e.HCM], c.c = a.c, a
});